From a695f0d26712a98dff9583e6025dfc4997eec57f Mon Sep 17 00:00:00 2001
From: John Thiltges <jthiltges2@unl.edu>
Date: Wed, 26 Jul 2017 12:14:28 -0500
Subject: [PATCH 3/3] Small leak in globus_get_cert_and_chain()

Valgrind shows a leak of 24 bytes per GSI authentication in globus_get_cert_and_chain(). It appears to be caused by BIO_NOCLOSE. The BIO is allocated with BIO_new_mem_buf(), so the data is treated as an unmanaged, read-only buffer, and there's no need to set the BIO_NOCLOSE flag.
---
 src/GlobusSupport.cc | 1 -
 1 file changed, 1 deletion(-)

diff --git a/src/GlobusSupport.cc b/src/GlobusSupport.cc
index 63c446c..b351c3f 100644
--- a/src/GlobusSupport.cc
+++ b/src/GlobusSupport.cc
@@ -509,7 +509,6 @@ bool globus_get_cert_and_chain(const char * creds, size_t credslen, X509 **cert,
   // OpenSSL wiki states that BIO_new_mem_buf results in a read-only object,
   // meaning the const_cast ought to be safe.
   state.m_bio = BIO_new_mem_buf(const_cast<char *>(creds), credslen);
-  BIO_ctrl(state.m_bio, BIO_CTRL_SET_CLOSE, BIO_NOCLOSE, NULL);
   if (!state.m_bio) {
     std::cerr << "Unable to allocate new BIO object" << std::endl;
     return false;
-- 
2.7.5

