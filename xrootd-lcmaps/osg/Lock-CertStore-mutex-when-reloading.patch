From 757346d65bf2c2631ca5567ae53f0202527ed0e2 Mon Sep 17 00:00:00 2001
From: Brian Bockelman <bbockelm@cse.unl.edu>
Date: Thu, 6 Apr 2017 14:41:39 -0500
Subject: [PATCH] Lock CertStore mutex when reloading.

---
 src/GlobusSupport.cc | 11 +++++++++--
 1 file changed, 9 insertions(+), 2 deletions(-)

diff --git a/src/GlobusSupport.cc b/src/GlobusSupport.cc
index 7948bc3..65d4b8b 100644
--- a/src/GlobusSupport.cc
+++ b/src/GlobusSupport.cc
@@ -10,6 +10,7 @@
 #include "globus/globus_gsi_callback_constants.h"
 #include "globus/globus_module.h"
 
+#include <atomic>
 #include <iostream>
 #include <memory>
 #include <mutex>
@@ -127,6 +128,8 @@ class VerifyCtx {
   friend class Verify;
   friend class CertStore;
 
+  VerifyCtx(const VerifyCtx&) = delete;
+
   VerifyCtx() {
     globus_result_t result = GLOBUS_SUCCESS;
     m_store_context = X509_STORE_CTX_new();
@@ -269,6 +272,8 @@ class CertStore {
   friend class VerifyCtx;
   friend class Verify;
 
+  CertStore(const CertStore&) = delete;
+
   CertStore()
   {
     //std::cerr << "Caching trust roots into memory\n";
@@ -280,6 +285,8 @@ class CertStore {
    */
   void reload()
   {
+    std::lock_guard<std::mutex> guard(m_mutex);
+
     static const char _function_name_ [] = "CertStore::reload()";
 
     if (m_cert_store)
@@ -338,7 +345,7 @@ class CertStore {
   GetVerify() {
     std::hash<std::thread::id> hasher;
     size_t slot = hasher(std::this_thread::get_id()) % m_store_size;
-    auto& store = m_store[slot];
+    std::unique_ptr<CertStore> &store = m_store[slot];
     if (!store) {
       store.reset(new CertStore());
     }
@@ -358,7 +365,7 @@ class CertStore {
   }
 
 private:
-  uint64_t m_expire_time;
+  std::atomic<uint64_t> m_expire_time;
   std::mutex m_mutex;
   X509_STORE *m_cert_store = nullptr;
   static const unsigned m_store_size = 63;
